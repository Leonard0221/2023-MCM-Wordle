{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"nrkHMtPvDt44"},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FzTzJE1jDzlo","executionInfo":{"status":"ok","timestamp":1676759353442,"user_tz":300,"elapsed":866,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"3be77c41-1370-490b-e9b9-8db407cb708e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["cd /content/drive/MyDrive/MCM/data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"up3m3yF0D45s","executionInfo":{"status":"ok","timestamp":1676759353564,"user_tz":300,"elapsed":4,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"e25ae410-9c8d-4a3e-83aa-34e469861cae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCM/data\n"]}]},{"cell_type":"code","source":["file_name = 'temp_all.csv' #Your filename\n","data = pd.read_csv(file_name).drop(columns='Unnamed: 0')  \n","\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":408},"id":"AfdDf6UvEI6K","executionInfo":{"status":"ok","timestamp":1676759354777,"user_tz":300,"elapsed":118,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"c4392fdc-dae1-4cd1-bccc-4fc78b881ee5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Date  Contest number   Word  Number of  reported results  \\\n","0  2022-12-31             560  manly                        20380   \n","1  2022-12-30             559  molar                        21204   \n","2  2022-12-29             558  havoc                        20001   \n","3  2022-12-28             557  impel                        20160   \n","4  2022-12-27             556  condo                        20879   \n","\n","   Number in hard mode  1 try  2 tries  3 tries  4 tries  5 tries  6 tries  \\\n","0                 1899      0        2       17       37       29       12   \n","1                 1973      0        4       21       38       26        9   \n","2                 1919      0        2       16       38       30       12   \n","3                 1937      0        3       21       40       25        9   \n","4                 2012      0        2       17       35       29       14   \n","\n","   7 or more tries (X)  word_format  max_word_repetition  diff_score  \\\n","0                    2        12345                    1           1   \n","1                    1        12345                    1           1   \n","2                    2        12345                    1           1   \n","3                    1        12345                    1           1   \n","4                    3        12342                    2           1   \n","\n","   syllable  brown_freq  reuters_freq  label  \n","0         2           2             0      2  \n","1         2           1             0      2  \n","2         2           3             1      2  \n","3         2           0             0      2  \n","4         2           0             0      2  "],"text/html":["\n","  <div id=\"df-c5496f09-8704-4d08-a4de-c79894899123\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Contest number</th>\n","      <th>Word</th>\n","      <th>Number of  reported results</th>\n","      <th>Number in hard mode</th>\n","      <th>1 try</th>\n","      <th>2 tries</th>\n","      <th>3 tries</th>\n","      <th>4 tries</th>\n","      <th>5 tries</th>\n","      <th>6 tries</th>\n","      <th>7 or more tries (X)</th>\n","      <th>word_format</th>\n","      <th>max_word_repetition</th>\n","      <th>diff_score</th>\n","      <th>syllable</th>\n","      <th>brown_freq</th>\n","      <th>reuters_freq</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-12-31</td>\n","      <td>560</td>\n","      <td>manly</td>\n","      <td>20380</td>\n","      <td>1899</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>17</td>\n","      <td>37</td>\n","      <td>29</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>12345</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-12-30</td>\n","      <td>559</td>\n","      <td>molar</td>\n","      <td>21204</td>\n","      <td>1973</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>21</td>\n","      <td>38</td>\n","      <td>26</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>12345</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-12-29</td>\n","      <td>558</td>\n","      <td>havoc</td>\n","      <td>20001</td>\n","      <td>1919</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>16</td>\n","      <td>38</td>\n","      <td>30</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>12345</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-12-28</td>\n","      <td>557</td>\n","      <td>impel</td>\n","      <td>20160</td>\n","      <td>1937</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>21</td>\n","      <td>40</td>\n","      <td>25</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>12345</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-12-27</td>\n","      <td>556</td>\n","      <td>condo</td>\n","      <td>20879</td>\n","      <td>2012</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>17</td>\n","      <td>35</td>\n","      <td>29</td>\n","      <td>14</td>\n","      <td>3</td>\n","      <td>12342</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5496f09-8704-4d08-a4de-c79894899123')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c5496f09-8704-4d08-a4de-c79894899123 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c5496f09-8704-4d08-a4de-c79894899123');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data['difficulty'] = data['1 try'] + 2*data['2 tries'] + 3*data['3 tries'] + 4*data['4 tries'] + \\\n","                    5*data['5 tries'] + 6*data['6 tries'] + 10*data['7 or more tries (X)']\n","data['difficulty'].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RswY8mm3FuF4","executionInfo":{"status":"ok","timestamp":1676759356718,"user_tz":300,"elapsed":126,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"f2e8c370-7c1e-48a9-99e1-4f88bdf22b81"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    440\n","1    417\n","2    446\n","3    418\n","4    454\n","Name: difficulty, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["!pip install Counter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bce8mViSo9l1","executionInfo":{"status":"ok","timestamp":1676759363007,"user_tz":300,"elapsed":5278,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"3c498bdc-d297-47d5-e4af-c100681860bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting Counter\n","  Downloading Counter-1.0.0.tar.gz (5.2 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Building wheels for collected packages: Counter\n","  Building wheel for Counter (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for Counter: filename=Counter-1.0.0-py3-none-any.whl size=5411 sha256=f3ff9678b99cf0f30546648a52521000f56ef05e6c02a016756d35059e751927\n","  Stored in directory: /root/.cache/pip/wheels/05/78/ee/7f4336de4d2631224a4b303be03e48eeb01db89bb5bd790f5d\n","Successfully built Counter\n","Installing collected packages: Counter\n","Successfully installed Counter-1.0.0\n"]}]},{"cell_type":"code","source":["from collections import Counter\n","import matplotlib.pyplot as plt\n","l = ['word_format','max_word_repetition',]\n","\n","v = 'difficulty' #you can also use label\n","for t in l:\n","    temp = data[[t,v]]\n","    # temp = temp[(temp.Freq_HAL>=10000) & (temp.Freq_HAL<=1e5)] # if the data is out of scope, use this to narrow down\n","    x = temp[t]\n","    target = temp[v]\n","    print(t)\n","    c = Counter(zip(x,target))\n","    # create a list of the sizes, here multiplied by 10 for scale\n","    s = [10*c[(xx,yy)] for xx,yy in zip(x,target)]\n","\n","    # plot it\n","    plt.scatter(x, target, s=s)\n","\n","    plt.show()\n","    plt.clf()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":567},"id":"WBLsQOOHo8wp","executionInfo":{"status":"ok","timestamp":1676759437391,"user_tz":300,"elapsed":392,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"6f95be94-1696-4b31-ecf7-f5ff099d945b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["word_format\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["max_word_repetition\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"1RGg2uKepZ0Y"},"execution_count":null,"outputs":[]}]}