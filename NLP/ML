{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1DXe1qoe0ZhE9YGohESFuaZHeH4_r5W9r","timestamp":1676681546746}],"authorship_tag":"ABX9TyPjCnZ6kiO8nxeBiVn5K+7/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":40,"metadata":{"id":"nrkHMtPvDt44","executionInfo":{"status":"ok","timestamp":1676774097774,"user_tz":300,"elapsed":100,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import torch"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FzTzJE1jDzlo","executionInfo":{"status":"ok","timestamp":1676774099097,"user_tz":300,"elapsed":797,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"fc8836b1-2d24-4000-8cd4-b518c87ed881"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["cd /content/drive/MyDrive/MCM/data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"up3m3yF0D45s","executionInfo":{"status":"ok","timestamp":1676774099197,"user_tz":300,"elapsed":4,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"0d9b35f2-c440-4b55-97b6-d166f1238295"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/MCM/data\n"]}]},{"cell_type":"code","source":["ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X4z8L4yTLGoE","executionInfo":{"status":"ok","timestamp":1676774100272,"user_tz":300,"elapsed":229,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"38ed1eb5-54c3-4513-82ea-1096617d4e5e"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["7_56.xlsx                         Problem_C_Data_Wordle.xlsx\n","aoa.xlsx                          \u001b[0m\u001b[01;34mroberta.large\u001b[0m/\n","clean_data.xlsx                   roberta.large.tar.gz\n","data_label_kmeans_3.xlsx          roberta.large.tar.gz.1\n","new.xlsx                          temp_all.csv\n","nlp_features_data.csv             WordDifficulty.csv\n","Problem_C_Data_Wordle_label.xlsx\n"]}]},{"cell_type":"code","source":["data = pd.read_csv('temp_all.csv').drop(columns='Unnamed: 0')   \n","data_label = pd.read_excel('new.xlsx' , index_col=None,header=0)\n","data_label.rename(columns={'Cluster2': 'label2'}, inplace=True)\n","# print(data_label)\n","data_label = data_label[['Word','label2','label3']]\n","data_merge = data.merge(data_label)\n","data_merge.rename(columns={'Cluster': 'label'}, inplace=True)\n","print(data_merge.head())\n","data_merge.to_csv('temp_all.csv')\n","raise\n","# print(data_merge.head())\n","# print(data_merge[data_merge['label']!=data_merge['label']])\n","# data_merge.to_csv('temp_all.csv')\n","# train_data = data_merge.iloc[:,12:]\n","# train_data.head()\n","# train_data.to_csv('temp_all.csv')\n","train_data = data_merge.drop(columns=['label'])\n","train_data = train_data.iloc[:,12:]\n","train_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":636},"id":"IC5qAnvaYln3","executionInfo":{"status":"error","timestamp":1676774147355,"user_tz":300,"elapsed":663,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"9c53b445-18d6-4a9f-ed6b-27eb86b9dd5f"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["         Date  Contest number   Word  Number of  reported results  \\\n","0  2022-12-31             560  manly                        20380   \n","1  2022-12-30             559  molar                        21204   \n","2  2022-12-29             558  havoc                        20001   \n","3  2022-12-28             557  impel                        20160   \n","4  2022-12-26             555  judge                        20011   \n","\n","   Number in hard mode  1 try  2 tries  3 tries  4 tries  5 tries  ...  ve  \\\n","0                 1899      0        2       17       37       29  ...   0   \n","1                 1973      0        4       21       38       26  ...   0   \n","2                 1919      0        2       16       38       30  ...   0   \n","3                 1937      0        3       21       40       25  ...   0   \n","4                 2043      0        2        8       16       26  ...   0   \n","\n","   wh  sk  ch  ck  ng  qu  th  label2  label3  \n","0   0   0   0   0   0   0   0     2.0     2.0  \n","1   0   0   0   0   0   0   0     2.0     2.0  \n","2   0   0   0   0   0   0   0     2.0     2.0  \n","3   0   0   0   0   0   0   0     2.0     2.0  \n","4   0   0   0   0   0   0   0     1.0     1.0  \n","\n","[5 rows x 51 columns]\n"]},{"output_type":"error","ename":"RuntimeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-45-aee46aa76176>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_merge\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mdata_merge\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'temp_all.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0;31m# print(data_merge.head())\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;31m# print(data_merge[data_merge['label']!=data_merge['label']])\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mRuntimeError\u001b[0m: No active exception to reraise"]}]},{"cell_type":"code","source":["data = pd.read_csv('nlp_features_data.csv').drop(columns='Unnamed: 0')  \n","data_label = pd.read_excel('Problem_C_Data_Wordle_label.xlsx' ,usecols=['Contest number','Cluster'], index_col=None,header=1)\n","data_merge = data.merge(data_label)\n","data_merge.rename(columns={'Cluster': 'label'}, inplace=True)\n","data_merge.to_csv('temp_all.csv')\n","# train_data = data_merge.iloc[:,12:]\n","# train_data.head()\n","# train_data.to_csv('temp_all.csv')"],"metadata":{"id":"AfdDf6UvEI6K","executionInfo":{"status":"aborted","timestamp":1676768222312,"user_tz":300,"elapsed":7,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data[['label2']].groupby(train_data.label2).agg(\"count\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"7HyikFr57r24","executionInfo":{"status":"ok","timestamp":1676768539502,"user_tz":300,"elapsed":95,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"c2c430a2-31fa-4e89-8ccb-2ef329681a31"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        label2\n","label2        \n","1           48\n","2          126\n","3          121\n","4           59"],"text/html":["\n","  <div id=\"df-394d2374-e757-442c-b71d-5e63449f1054\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label2</th>\n","    </tr>\n","    <tr>\n","      <th>label2</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>126</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>121</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>59</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-394d2374-e757-442c-b71d-5e63449f1054')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-394d2374-e757-442c-b71d-5e63449f1054 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-394d2374-e757-442c-b71d-5e63449f1054');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["train_data = train_data.to_numpy()\n","train_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i2BtQqJfxImg","executionInfo":{"status":"ok","timestamp":1676768546335,"user_tz":300,"elapsed":108,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"2c4df6b7-c329-4492-adba-b5c381f4f5bf"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[12345,     1,     1, ...,     2,     0,     1],\n","       [12345,     1,     1, ...,     1,     0,     2],\n","       [12345,     1,     1, ...,     3,     1,     3],\n","       ...,\n","       [12314,     2,     0, ...,     1,     0,     4],\n","       [12345,     1,     0, ...,     1,     0,     2],\n","       [12345,     1,     0, ...,     8,    29,     3]])"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","data_train, data_val = train_test_split(train_data, test_size=0.1, random_state=42)\n","Train_X, Train_y = data_train[:,:-1], data_train[:,-1]\n","Val_X, Val_y = data_val[:,:-1], data_val[:,-1]\n","print('The training size is %d with %d features; The val size is %d'%(Train_X.shape[0],Train_X.shape[1],Val_X.shape[0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_GDyPwLivjkC","executionInfo":{"status":"ok","timestamp":1676768550695,"user_tz":300,"elapsed":1206,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"5e94136b-7924-4067-bdcc-802a43caa4ae"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["The training size is 318 with 6 features; The val size is 36\n"]}]},{"cell_type":"code","source":["print(Train_X.shape)\n","print(Train_y.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fBByQqss6PB-","executionInfo":{"status":"ok","timestamp":1676768553252,"user_tz":300,"elapsed":78,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"dea37a37-50fe-42f8-eae9-5b501d0d8250"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["(318, 6)\n","(318,)\n"]}]},{"cell_type":"code","source":["from sklearn import svm\n","clf = svm.SVC()\n","clf.fit(Train_X, Train_y)"],"metadata":{"id":"pRTOsezL1pIv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676768555431,"user_tz":300,"elapsed":237,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"d1433f3a-bc4b-41c7-d649-abb7bd599206"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC()"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["pred_y = clf.predict(Val_X)\n","sum(pred_y==Val_y)/Val_y.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N6AbnH30cXw-","executionInfo":{"status":"ok","timestamp":1676768556411,"user_tz":300,"elapsed":90,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"53c3a563-f900-4fc2-cce8-0b94615f294c"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.2222222222222222"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["from xgboost import XGBClassifier\n","clf = XGBClassifier()\n","clf.fit(Train_X, Train_y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kW75Z0Ov6vAy","executionInfo":{"status":"ok","timestamp":1676768558732,"user_tz":300,"elapsed":425,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"9e3c3e71-a42a-47e9-d3bf-9cf278b95044"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["XGBClassifier(objective='multi:softprob')"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["pred_y = clf.predict(Val_X)\n","sum(pred_y==Val_y)/Val_y.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7E6YqdEA7kKT","executionInfo":{"status":"ok","timestamp":1676768560209,"user_tz":300,"elapsed":88,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"ca208ca5-27be-4465-be92-cbd67e067082"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.4722222222222222"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["from sklearn import ensemble\n","clf = ensemble.RandomForestClassifier(criterion='entropy')\n","clf.fit(Train_X, Train_y)\n","pred_y = clf.predict(Val_X)\n","print(pred_y)\n","sum(pred_y==Val_y)/Val_y.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nKF73L6r8xUA","executionInfo":{"status":"ok","timestamp":1676768562314,"user_tz":300,"elapsed":903,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}},"outputId":"7baa7640-1fdd-4f46-e68c-b10eb618abdd"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 2 3 2 1 3 1 3 4 1 3 3 2 2 3 2 2 2 3 2 2 3 2 3 3 2 4 2 3 3 3 2 3 2 3 2]\n"]},{"output_type":"execute_result","data":{"text/plain":["0.2777777777777778"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":[],"metadata":{"id":"f-ZY3MdW81gO","executionInfo":{"status":"aborted","timestamp":1676768222320,"user_tz":300,"elapsed":13,"user":{"displayName":"Alex Zou","userId":"00482416019470548107"}}},"execution_count":null,"outputs":[]}]}